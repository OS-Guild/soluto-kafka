version: '2.3'

services:
    consumer:
        build: ./kafka-consumer-java/
        ports:
            - 2000:3000
        environment:
            - JAVA_ENV=test
            - PORT=3000
            - KAFKA_PASSWORD=
            - SHOULD_SKIP_AUTHENTICATION=true
            - DEDUP_PARTITION_BY_KEY=false
            - STATSD_API_KEY=stam
            - STATSD_ROOT=stam
            - STATSD_HOST=stam
            - KAFKA_BROKER=kafka:9092
            - TOPIC=test
            - RETRY_TOPIC=test-retry
            - DEAD_LETTER_TOPIC=test-deadLetter
            - GROUP_ID=test
            - TARGET_ENDPOINT=http://fake-server:2000/target
            - CONCURRENCY=10
            - CONCURRENCY_PER_PARTITION=1
            - PROCESSING_DELAY=0
            - POLL_RECORDS=200
            - TRUSTSTORE_LOCATION=stam
            - KEYSTORE_LOCATION=stam
            - CONSUMER_POLL_TIMEOUT=5000
            - CONSUMER_THREADS=2
            - CLUSTER=test
            - SECRETS_FILE_LOCATION=stam
            - TRUSTSTORE=stam
            - KEYSTORE=stam
        depends_on:
            - kafka
            - fake-server
    producer:
        build: ./kafka-producer-java/
        ports:
            - 2500:3000
        environment:
            - JAVA_ENV=test
            - PORT=3000
            - KAFKA_PASSWORD=
            - SHOULD_SKIP_AUTHENTICATION=true
            - STATSD_API_KEY=stam
            - STATSD_ROOT=stam
            - STATSD_HOST=stam
            - KAFKA_BROKER=kafka:9092
            - TOPIC=test
            - READINESS_TOPIC=readiness
            - TRUSTSTORE_LOCATION=stam
            - KEYSTORE_LOCATION=stam
            - CLUSTER=test
            - SECRETS_FILE_LOCATION=stam
            - TRUSTSTORE=stam
            - KEYSTORE=stam
            - PRODUCER_NAME=producer

        depends_on:
            - kafka
            - fake-server

    fake-server:
        image: acreastus.azurecr.io/simple-fake-server-server:latest
        ports:
            - 3000:3000

    zookeeper:
        image: wurstmeister/zookeeper
        environment:
            - LOG4J_LOGGER_KAFKA=WARN
        ports:
            - '2181:2181'
        logging:
            driver: none

    kafka:
        image: wurstmeister/kafka
        ports:
            - '9092:9092'
        environment:
            - KAFKA_ADVERTISED_HOST_NAME=kafka
            - KAFKA_CREATE_TOPICS=test:2:2,readiness:2:2
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - LOG4J_LOGGER_KAFKA=WARN
        depends_on:
            - zookeeper
        healthcheck:
            test: 'exit 0'
            interval: 15s
            retries: 3
        logging:
            driver: none
